// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppParameter struct {
	AttributesTransformations *string `pulumi:"attributesTransformations"`
	DefaultValues             *string `pulumi:"defaultValues"`
	IncludeInSamlAssertion    *bool   `pulumi:"includeInSamlAssertion"`
	Label                     *string `pulumi:"label"`
	ParamId                   *int    `pulumi:"paramId"`
	ParamKeyName              string  `pulumi:"paramKeyName"`
	ProvisionedEntitlements   *bool   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   *bool   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               *bool   `pulumi:"skipIfBlank"`
	UserAttributeMacros       *string `pulumi:"userAttributeMacros"`
	UserAttributeMappings     *string `pulumi:"userAttributeMappings"`
	Values                    *string `pulumi:"values"`
}

// AppParameterInput is an input type that accepts AppParameterArgs and AppParameterOutput values.
// You can construct a concrete instance of `AppParameterInput` via:
//
//          AppParameterArgs{...}
type AppParameterInput interface {
	pulumi.Input

	ToAppParameterOutput() AppParameterOutput
	ToAppParameterOutputWithContext(context.Context) AppParameterOutput
}

type AppParameterArgs struct {
	AttributesTransformations pulumi.StringPtrInput `pulumi:"attributesTransformations"`
	DefaultValues             pulumi.StringPtrInput `pulumi:"defaultValues"`
	IncludeInSamlAssertion    pulumi.BoolPtrInput   `pulumi:"includeInSamlAssertion"`
	Label                     pulumi.StringPtrInput `pulumi:"label"`
	ParamId                   pulumi.IntPtrInput    `pulumi:"paramId"`
	ParamKeyName              pulumi.StringInput    `pulumi:"paramKeyName"`
	ProvisionedEntitlements   pulumi.BoolPtrInput   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   pulumi.BoolPtrInput   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               pulumi.BoolPtrInput   `pulumi:"skipIfBlank"`
	UserAttributeMacros       pulumi.StringPtrInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings     pulumi.StringPtrInput `pulumi:"userAttributeMappings"`
	Values                    pulumi.StringPtrInput `pulumi:"values"`
}

func (AppParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppParameter)(nil)).Elem()
}

func (i AppParameterArgs) ToAppParameterOutput() AppParameterOutput {
	return i.ToAppParameterOutputWithContext(context.Background())
}

func (i AppParameterArgs) ToAppParameterOutputWithContext(ctx context.Context) AppParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppParameterOutput)
}

// AppParameterArrayInput is an input type that accepts AppParameterArray and AppParameterArrayOutput values.
// You can construct a concrete instance of `AppParameterArrayInput` via:
//
//          AppParameterArray{ AppParameterArgs{...} }
type AppParameterArrayInput interface {
	pulumi.Input

	ToAppParameterArrayOutput() AppParameterArrayOutput
	ToAppParameterArrayOutputWithContext(context.Context) AppParameterArrayOutput
}

type AppParameterArray []AppParameterInput

func (AppParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppParameter)(nil)).Elem()
}

func (i AppParameterArray) ToAppParameterArrayOutput() AppParameterArrayOutput {
	return i.ToAppParameterArrayOutputWithContext(context.Background())
}

func (i AppParameterArray) ToAppParameterArrayOutputWithContext(ctx context.Context) AppParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppParameterArrayOutput)
}

type AppParameterOutput struct{ *pulumi.OutputState }

func (AppParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppParameter)(nil)).Elem()
}

func (o AppParameterOutput) ToAppParameterOutput() AppParameterOutput {
	return o
}

func (o AppParameterOutput) ToAppParameterOutputWithContext(ctx context.Context) AppParameterOutput {
	return o
}

func (o AppParameterOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameter) *string { return v.AttributesTransformations }).(pulumi.StringPtrOutput)
}

func (o AppParameterOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameter) *string { return v.DefaultValues }).(pulumi.StringPtrOutput)
}

func (o AppParameterOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameter) *bool { return v.IncludeInSamlAssertion }).(pulumi.BoolPtrOutput)
}

func (o AppParameterOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameter) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o AppParameterOutput) ParamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppParameter) *int { return v.ParamId }).(pulumi.IntPtrOutput)
}

func (o AppParameterOutput) ParamKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v AppParameter) string { return v.ParamKeyName }).(pulumi.StringOutput)
}

func (o AppParameterOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameter) *bool { return v.ProvisionedEntitlements }).(pulumi.BoolPtrOutput)
}

func (o AppParameterOutput) SafeEntitlementsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameter) *bool { return v.SafeEntitlementsEnabled }).(pulumi.BoolPtrOutput)
}

func (o AppParameterOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameter) *bool { return v.SkipIfBlank }).(pulumi.BoolPtrOutput)
}

func (o AppParameterOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameter) *string { return v.UserAttributeMacros }).(pulumi.StringPtrOutput)
}

func (o AppParameterOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameter) *string { return v.UserAttributeMappings }).(pulumi.StringPtrOutput)
}

func (o AppParameterOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameter) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type AppParameterArrayOutput struct{ *pulumi.OutputState }

func (AppParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppParameter)(nil)).Elem()
}

func (o AppParameterArrayOutput) ToAppParameterArrayOutput() AppParameterArrayOutput {
	return o
}

func (o AppParameterArrayOutput) ToAppParameterArrayOutputWithContext(ctx context.Context) AppParameterArrayOutput {
	return o
}

func (o AppParameterArrayOutput) Index(i pulumi.IntInput) AppParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppParameter {
		return vs[0].([]AppParameter)[vs[1].(int)]
	}).(AppParameterOutput)
}

type AppRulesAction struct {
	Action     string   `pulumi:"action"`
	Expression *string  `pulumi:"expression"`
	Values     []string `pulumi:"values"`
}

// AppRulesActionInput is an input type that accepts AppRulesActionArgs and AppRulesActionOutput values.
// You can construct a concrete instance of `AppRulesActionInput` via:
//
//          AppRulesActionArgs{...}
type AppRulesActionInput interface {
	pulumi.Input

	ToAppRulesActionOutput() AppRulesActionOutput
	ToAppRulesActionOutputWithContext(context.Context) AppRulesActionOutput
}

type AppRulesActionArgs struct {
	Action     pulumi.StringInput      `pulumi:"action"`
	Expression pulumi.StringPtrInput   `pulumi:"expression"`
	Values     pulumi.StringArrayInput `pulumi:"values"`
}

func (AppRulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesAction)(nil)).Elem()
}

func (i AppRulesActionArgs) ToAppRulesActionOutput() AppRulesActionOutput {
	return i.ToAppRulesActionOutputWithContext(context.Background())
}

func (i AppRulesActionArgs) ToAppRulesActionOutputWithContext(ctx context.Context) AppRulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesActionOutput)
}

// AppRulesActionArrayInput is an input type that accepts AppRulesActionArray and AppRulesActionArrayOutput values.
// You can construct a concrete instance of `AppRulesActionArrayInput` via:
//
//          AppRulesActionArray{ AppRulesActionArgs{...} }
type AppRulesActionArrayInput interface {
	pulumi.Input

	ToAppRulesActionArrayOutput() AppRulesActionArrayOutput
	ToAppRulesActionArrayOutputWithContext(context.Context) AppRulesActionArrayOutput
}

type AppRulesActionArray []AppRulesActionInput

func (AppRulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesAction)(nil)).Elem()
}

func (i AppRulesActionArray) ToAppRulesActionArrayOutput() AppRulesActionArrayOutput {
	return i.ToAppRulesActionArrayOutputWithContext(context.Background())
}

func (i AppRulesActionArray) ToAppRulesActionArrayOutputWithContext(ctx context.Context) AppRulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesActionArrayOutput)
}

type AppRulesActionOutput struct{ *pulumi.OutputState }

func (AppRulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesAction)(nil)).Elem()
}

func (o AppRulesActionOutput) ToAppRulesActionOutput() AppRulesActionOutput {
	return o
}

func (o AppRulesActionOutput) ToAppRulesActionOutputWithContext(ctx context.Context) AppRulesActionOutput {
	return o
}

func (o AppRulesActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o AppRulesActionOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRulesAction) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

func (o AppRulesActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppRulesAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AppRulesActionArrayOutput struct{ *pulumi.OutputState }

func (AppRulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesAction)(nil)).Elem()
}

func (o AppRulesActionArrayOutput) ToAppRulesActionArrayOutput() AppRulesActionArrayOutput {
	return o
}

func (o AppRulesActionArrayOutput) ToAppRulesActionArrayOutputWithContext(ctx context.Context) AppRulesActionArrayOutput {
	return o
}

func (o AppRulesActionArrayOutput) Index(i pulumi.IntInput) AppRulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppRulesAction {
		return vs[0].([]AppRulesAction)[vs[1].(int)]
	}).(AppRulesActionOutput)
}

type AppRulesCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// AppRulesConditionInput is an input type that accepts AppRulesConditionArgs and AppRulesConditionOutput values.
// You can construct a concrete instance of `AppRulesConditionInput` via:
//
//          AppRulesConditionArgs{...}
type AppRulesConditionInput interface {
	pulumi.Input

	ToAppRulesConditionOutput() AppRulesConditionOutput
	ToAppRulesConditionOutputWithContext(context.Context) AppRulesConditionOutput
}

type AppRulesConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (AppRulesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesCondition)(nil)).Elem()
}

func (i AppRulesConditionArgs) ToAppRulesConditionOutput() AppRulesConditionOutput {
	return i.ToAppRulesConditionOutputWithContext(context.Background())
}

func (i AppRulesConditionArgs) ToAppRulesConditionOutputWithContext(ctx context.Context) AppRulesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesConditionOutput)
}

// AppRulesConditionArrayInput is an input type that accepts AppRulesConditionArray and AppRulesConditionArrayOutput values.
// You can construct a concrete instance of `AppRulesConditionArrayInput` via:
//
//          AppRulesConditionArray{ AppRulesConditionArgs{...} }
type AppRulesConditionArrayInput interface {
	pulumi.Input

	ToAppRulesConditionArrayOutput() AppRulesConditionArrayOutput
	ToAppRulesConditionArrayOutputWithContext(context.Context) AppRulesConditionArrayOutput
}

type AppRulesConditionArray []AppRulesConditionInput

func (AppRulesConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesCondition)(nil)).Elem()
}

func (i AppRulesConditionArray) ToAppRulesConditionArrayOutput() AppRulesConditionArrayOutput {
	return i.ToAppRulesConditionArrayOutputWithContext(context.Background())
}

func (i AppRulesConditionArray) ToAppRulesConditionArrayOutputWithContext(ctx context.Context) AppRulesConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesConditionArrayOutput)
}

type AppRulesConditionOutput struct{ *pulumi.OutputState }

func (AppRulesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesCondition)(nil)).Elem()
}

func (o AppRulesConditionOutput) ToAppRulesConditionOutput() AppRulesConditionOutput {
	return o
}

func (o AppRulesConditionOutput) ToAppRulesConditionOutputWithContext(ctx context.Context) AppRulesConditionOutput {
	return o
}

func (o AppRulesConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o AppRulesConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o AppRulesConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesCondition) string { return v.Value }).(pulumi.StringOutput)
}

type AppRulesConditionArrayOutput struct{ *pulumi.OutputState }

func (AppRulesConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesCondition)(nil)).Elem()
}

func (o AppRulesConditionArrayOutput) ToAppRulesConditionArrayOutput() AppRulesConditionArrayOutput {
	return o
}

func (o AppRulesConditionArrayOutput) ToAppRulesConditionArrayOutputWithContext(ctx context.Context) AppRulesConditionArrayOutput {
	return o
}

func (o AppRulesConditionArrayOutput) Index(i pulumi.IntInput) AppRulesConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppRulesCondition {
		return vs[0].([]AppRulesCondition)[vs[1].(int)]
	}).(AppRulesConditionOutput)
}

type OidcAppsParameter struct {
	AttributesTransformations *string `pulumi:"attributesTransformations"`
	DefaultValues             *string `pulumi:"defaultValues"`
	IncludeInSamlAssertion    *bool   `pulumi:"includeInSamlAssertion"`
	Label                     *string `pulumi:"label"`
	ParamId                   *int    `pulumi:"paramId"`
	ParamKeyName              string  `pulumi:"paramKeyName"`
	ProvisionedEntitlements   *bool   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   *bool   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               *bool   `pulumi:"skipIfBlank"`
	UserAttributeMacros       *string `pulumi:"userAttributeMacros"`
	UserAttributeMappings     *string `pulumi:"userAttributeMappings"`
	Values                    *string `pulumi:"values"`
}

// OidcAppsParameterInput is an input type that accepts OidcAppsParameterArgs and OidcAppsParameterOutput values.
// You can construct a concrete instance of `OidcAppsParameterInput` via:
//
//          OidcAppsParameterArgs{...}
type OidcAppsParameterInput interface {
	pulumi.Input

	ToOidcAppsParameterOutput() OidcAppsParameterOutput
	ToOidcAppsParameterOutputWithContext(context.Context) OidcAppsParameterOutput
}

type OidcAppsParameterArgs struct {
	AttributesTransformations pulumi.StringPtrInput `pulumi:"attributesTransformations"`
	DefaultValues             pulumi.StringPtrInput `pulumi:"defaultValues"`
	IncludeInSamlAssertion    pulumi.BoolPtrInput   `pulumi:"includeInSamlAssertion"`
	Label                     pulumi.StringPtrInput `pulumi:"label"`
	ParamId                   pulumi.IntPtrInput    `pulumi:"paramId"`
	ParamKeyName              pulumi.StringInput    `pulumi:"paramKeyName"`
	ProvisionedEntitlements   pulumi.BoolPtrInput   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   pulumi.BoolPtrInput   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               pulumi.BoolPtrInput   `pulumi:"skipIfBlank"`
	UserAttributeMacros       pulumi.StringPtrInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings     pulumi.StringPtrInput `pulumi:"userAttributeMappings"`
	Values                    pulumi.StringPtrInput `pulumi:"values"`
}

func (OidcAppsParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcAppsParameter)(nil)).Elem()
}

func (i OidcAppsParameterArgs) ToOidcAppsParameterOutput() OidcAppsParameterOutput {
	return i.ToOidcAppsParameterOutputWithContext(context.Background())
}

func (i OidcAppsParameterArgs) ToOidcAppsParameterOutputWithContext(ctx context.Context) OidcAppsParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppsParameterOutput)
}

// OidcAppsParameterArrayInput is an input type that accepts OidcAppsParameterArray and OidcAppsParameterArrayOutput values.
// You can construct a concrete instance of `OidcAppsParameterArrayInput` via:
//
//          OidcAppsParameterArray{ OidcAppsParameterArgs{...} }
type OidcAppsParameterArrayInput interface {
	pulumi.Input

	ToOidcAppsParameterArrayOutput() OidcAppsParameterArrayOutput
	ToOidcAppsParameterArrayOutputWithContext(context.Context) OidcAppsParameterArrayOutput
}

type OidcAppsParameterArray []OidcAppsParameterInput

func (OidcAppsParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OidcAppsParameter)(nil)).Elem()
}

func (i OidcAppsParameterArray) ToOidcAppsParameterArrayOutput() OidcAppsParameterArrayOutput {
	return i.ToOidcAppsParameterArrayOutputWithContext(context.Background())
}

func (i OidcAppsParameterArray) ToOidcAppsParameterArrayOutputWithContext(ctx context.Context) OidcAppsParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppsParameterArrayOutput)
}

type OidcAppsParameterOutput struct{ *pulumi.OutputState }

func (OidcAppsParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcAppsParameter)(nil)).Elem()
}

func (o OidcAppsParameterOutput) ToOidcAppsParameterOutput() OidcAppsParameterOutput {
	return o
}

func (o OidcAppsParameterOutput) ToOidcAppsParameterOutputWithContext(ctx context.Context) OidcAppsParameterOutput {
	return o
}

func (o OidcAppsParameterOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.AttributesTransformations }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.DefaultValues }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.IncludeInSamlAssertion }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) ParamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *int { return v.ParamId }).(pulumi.IntPtrOutput)
}

func (o OidcAppsParameterOutput) ParamKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v OidcAppsParameter) string { return v.ParamKeyName }).(pulumi.StringOutput)
}

func (o OidcAppsParameterOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.ProvisionedEntitlements }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) SafeEntitlementsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.SafeEntitlementsEnabled }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.SkipIfBlank }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.UserAttributeMacros }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.UserAttributeMappings }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type OidcAppsParameterArrayOutput struct{ *pulumi.OutputState }

func (OidcAppsParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OidcAppsParameter)(nil)).Elem()
}

func (o OidcAppsParameterArrayOutput) ToOidcAppsParameterArrayOutput() OidcAppsParameterArrayOutput {
	return o
}

func (o OidcAppsParameterArrayOutput) ToOidcAppsParameterArrayOutputWithContext(ctx context.Context) OidcAppsParameterArrayOutput {
	return o
}

func (o OidcAppsParameterArrayOutput) Index(i pulumi.IntInput) OidcAppsParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OidcAppsParameter {
		return vs[0].([]OidcAppsParameter)[vs[1].(int)]
	}).(OidcAppsParameterOutput)
}

type PrivilegesPrivilege struct {
	Statements []PrivilegesPrivilegeStatement `pulumi:"statements"`
	Version    *string                        `pulumi:"version"`
}

// PrivilegesPrivilegeInput is an input type that accepts PrivilegesPrivilegeArgs and PrivilegesPrivilegeOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegeInput` via:
//
//          PrivilegesPrivilegeArgs{...}
type PrivilegesPrivilegeInput interface {
	pulumi.Input

	ToPrivilegesPrivilegeOutput() PrivilegesPrivilegeOutput
	ToPrivilegesPrivilegeOutputWithContext(context.Context) PrivilegesPrivilegeOutput
}

type PrivilegesPrivilegeArgs struct {
	Statements PrivilegesPrivilegeStatementArrayInput `pulumi:"statements"`
	Version    pulumi.StringPtrInput                  `pulumi:"version"`
}

func (PrivilegesPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilege)(nil)).Elem()
}

func (i PrivilegesPrivilegeArgs) ToPrivilegesPrivilegeOutput() PrivilegesPrivilegeOutput {
	return i.ToPrivilegesPrivilegeOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeArgs) ToPrivilegesPrivilegeOutputWithContext(ctx context.Context) PrivilegesPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeOutput)
}

// PrivilegesPrivilegeArrayInput is an input type that accepts PrivilegesPrivilegeArray and PrivilegesPrivilegeArrayOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegeArrayInput` via:
//
//          PrivilegesPrivilegeArray{ PrivilegesPrivilegeArgs{...} }
type PrivilegesPrivilegeArrayInput interface {
	pulumi.Input

	ToPrivilegesPrivilegeArrayOutput() PrivilegesPrivilegeArrayOutput
	ToPrivilegesPrivilegeArrayOutputWithContext(context.Context) PrivilegesPrivilegeArrayOutput
}

type PrivilegesPrivilegeArray []PrivilegesPrivilegeInput

func (PrivilegesPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegesPrivilege)(nil)).Elem()
}

func (i PrivilegesPrivilegeArray) ToPrivilegesPrivilegeArrayOutput() PrivilegesPrivilegeArrayOutput {
	return i.ToPrivilegesPrivilegeArrayOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeArray) ToPrivilegesPrivilegeArrayOutputWithContext(ctx context.Context) PrivilegesPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeArrayOutput)
}

type PrivilegesPrivilegeOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilege)(nil)).Elem()
}

func (o PrivilegesPrivilegeOutput) ToPrivilegesPrivilegeOutput() PrivilegesPrivilegeOutput {
	return o
}

func (o PrivilegesPrivilegeOutput) ToPrivilegesPrivilegeOutputWithContext(ctx context.Context) PrivilegesPrivilegeOutput {
	return o
}

func (o PrivilegesPrivilegeOutput) Statements() PrivilegesPrivilegeStatementArrayOutput {
	return o.ApplyT(func(v PrivilegesPrivilege) []PrivilegesPrivilegeStatement { return v.Statements }).(PrivilegesPrivilegeStatementArrayOutput)
}

func (o PrivilegesPrivilegeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivilegesPrivilege) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PrivilegesPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegesPrivilege)(nil)).Elem()
}

func (o PrivilegesPrivilegeArrayOutput) ToPrivilegesPrivilegeArrayOutput() PrivilegesPrivilegeArrayOutput {
	return o
}

func (o PrivilegesPrivilegeArrayOutput) ToPrivilegesPrivilegeArrayOutputWithContext(ctx context.Context) PrivilegesPrivilegeArrayOutput {
	return o
}

func (o PrivilegesPrivilegeArrayOutput) Index(i pulumi.IntInput) PrivilegesPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegesPrivilege {
		return vs[0].([]PrivilegesPrivilege)[vs[1].(int)]
	}).(PrivilegesPrivilegeOutput)
}

type PrivilegesPrivilegeStatement struct {
	Actions []string `pulumi:"actions"`
	Effect  string   `pulumi:"effect"`
	Scopes  []string `pulumi:"scopes"`
}

// PrivilegesPrivilegeStatementInput is an input type that accepts PrivilegesPrivilegeStatementArgs and PrivilegesPrivilegeStatementOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegeStatementInput` via:
//
//          PrivilegesPrivilegeStatementArgs{...}
type PrivilegesPrivilegeStatementInput interface {
	pulumi.Input

	ToPrivilegesPrivilegeStatementOutput() PrivilegesPrivilegeStatementOutput
	ToPrivilegesPrivilegeStatementOutputWithContext(context.Context) PrivilegesPrivilegeStatementOutput
}

type PrivilegesPrivilegeStatementArgs struct {
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	Effect  pulumi.StringInput      `pulumi:"effect"`
	Scopes  pulumi.StringArrayInput `pulumi:"scopes"`
}

func (PrivilegesPrivilegeStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (i PrivilegesPrivilegeStatementArgs) ToPrivilegesPrivilegeStatementOutput() PrivilegesPrivilegeStatementOutput {
	return i.ToPrivilegesPrivilegeStatementOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeStatementArgs) ToPrivilegesPrivilegeStatementOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeStatementOutput)
}

// PrivilegesPrivilegeStatementArrayInput is an input type that accepts PrivilegesPrivilegeStatementArray and PrivilegesPrivilegeStatementArrayOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegeStatementArrayInput` via:
//
//          PrivilegesPrivilegeStatementArray{ PrivilegesPrivilegeStatementArgs{...} }
type PrivilegesPrivilegeStatementArrayInput interface {
	pulumi.Input

	ToPrivilegesPrivilegeStatementArrayOutput() PrivilegesPrivilegeStatementArrayOutput
	ToPrivilegesPrivilegeStatementArrayOutputWithContext(context.Context) PrivilegesPrivilegeStatementArrayOutput
}

type PrivilegesPrivilegeStatementArray []PrivilegesPrivilegeStatementInput

func (PrivilegesPrivilegeStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (i PrivilegesPrivilegeStatementArray) ToPrivilegesPrivilegeStatementArrayOutput() PrivilegesPrivilegeStatementArrayOutput {
	return i.ToPrivilegesPrivilegeStatementArrayOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeStatementArray) ToPrivilegesPrivilegeStatementArrayOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeStatementArrayOutput)
}

type PrivilegesPrivilegeStatementOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegeStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (o PrivilegesPrivilegeStatementOutput) ToPrivilegesPrivilegeStatementOutput() PrivilegesPrivilegeStatementOutput {
	return o
}

func (o PrivilegesPrivilegeStatementOutput) ToPrivilegesPrivilegeStatementOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementOutput {
	return o
}

func (o PrivilegesPrivilegeStatementOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegesPrivilegeStatement) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o PrivilegesPrivilegeStatementOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegesPrivilegeStatement) string { return v.Effect }).(pulumi.StringOutput)
}

func (o PrivilegesPrivilegeStatementOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegesPrivilegeStatement) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type PrivilegesPrivilegeStatementArrayOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegeStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (o PrivilegesPrivilegeStatementArrayOutput) ToPrivilegesPrivilegeStatementArrayOutput() PrivilegesPrivilegeStatementArrayOutput {
	return o
}

func (o PrivilegesPrivilegeStatementArrayOutput) ToPrivilegesPrivilegeStatementArrayOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementArrayOutput {
	return o
}

func (o PrivilegesPrivilegeStatementArrayOutput) Index(i pulumi.IntInput) PrivilegesPrivilegeStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegesPrivilegeStatement {
		return vs[0].([]PrivilegesPrivilegeStatement)[vs[1].(int)]
	}).(PrivilegesPrivilegeStatementOutput)
}

type SamlAppsParameter struct {
	AttributesTransformations *string `pulumi:"attributesTransformations"`
	DefaultValues             *string `pulumi:"defaultValues"`
	IncludeInSamlAssertion    *bool   `pulumi:"includeInSamlAssertion"`
	Label                     *string `pulumi:"label"`
	ParamId                   *int    `pulumi:"paramId"`
	ParamKeyName              string  `pulumi:"paramKeyName"`
	ProvisionedEntitlements   *bool   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   *bool   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               *bool   `pulumi:"skipIfBlank"`
	UserAttributeMacros       *string `pulumi:"userAttributeMacros"`
	UserAttributeMappings     *string `pulumi:"userAttributeMappings"`
	Values                    *string `pulumi:"values"`
}

// SamlAppsParameterInput is an input type that accepts SamlAppsParameterArgs and SamlAppsParameterOutput values.
// You can construct a concrete instance of `SamlAppsParameterInput` via:
//
//          SamlAppsParameterArgs{...}
type SamlAppsParameterInput interface {
	pulumi.Input

	ToSamlAppsParameterOutput() SamlAppsParameterOutput
	ToSamlAppsParameterOutputWithContext(context.Context) SamlAppsParameterOutput
}

type SamlAppsParameterArgs struct {
	AttributesTransformations pulumi.StringPtrInput `pulumi:"attributesTransformations"`
	DefaultValues             pulumi.StringPtrInput `pulumi:"defaultValues"`
	IncludeInSamlAssertion    pulumi.BoolPtrInput   `pulumi:"includeInSamlAssertion"`
	Label                     pulumi.StringPtrInput `pulumi:"label"`
	ParamId                   pulumi.IntPtrInput    `pulumi:"paramId"`
	ParamKeyName              pulumi.StringInput    `pulumi:"paramKeyName"`
	ProvisionedEntitlements   pulumi.BoolPtrInput   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   pulumi.BoolPtrInput   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               pulumi.BoolPtrInput   `pulumi:"skipIfBlank"`
	UserAttributeMacros       pulumi.StringPtrInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings     pulumi.StringPtrInput `pulumi:"userAttributeMappings"`
	Values                    pulumi.StringPtrInput `pulumi:"values"`
}

func (SamlAppsParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppsParameter)(nil)).Elem()
}

func (i SamlAppsParameterArgs) ToSamlAppsParameterOutput() SamlAppsParameterOutput {
	return i.ToSamlAppsParameterOutputWithContext(context.Background())
}

func (i SamlAppsParameterArgs) ToSamlAppsParameterOutputWithContext(ctx context.Context) SamlAppsParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppsParameterOutput)
}

// SamlAppsParameterArrayInput is an input type that accepts SamlAppsParameterArray and SamlAppsParameterArrayOutput values.
// You can construct a concrete instance of `SamlAppsParameterArrayInput` via:
//
//          SamlAppsParameterArray{ SamlAppsParameterArgs{...} }
type SamlAppsParameterArrayInput interface {
	pulumi.Input

	ToSamlAppsParameterArrayOutput() SamlAppsParameterArrayOutput
	ToSamlAppsParameterArrayOutputWithContext(context.Context) SamlAppsParameterArrayOutput
}

type SamlAppsParameterArray []SamlAppsParameterInput

func (SamlAppsParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppsParameter)(nil)).Elem()
}

func (i SamlAppsParameterArray) ToSamlAppsParameterArrayOutput() SamlAppsParameterArrayOutput {
	return i.ToSamlAppsParameterArrayOutputWithContext(context.Background())
}

func (i SamlAppsParameterArray) ToSamlAppsParameterArrayOutputWithContext(ctx context.Context) SamlAppsParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppsParameterArrayOutput)
}

type SamlAppsParameterOutput struct{ *pulumi.OutputState }

func (SamlAppsParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppsParameter)(nil)).Elem()
}

func (o SamlAppsParameterOutput) ToSamlAppsParameterOutput() SamlAppsParameterOutput {
	return o
}

func (o SamlAppsParameterOutput) ToSamlAppsParameterOutputWithContext(ctx context.Context) SamlAppsParameterOutput {
	return o
}

func (o SamlAppsParameterOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.AttributesTransformations }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.DefaultValues }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.IncludeInSamlAssertion }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) ParamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *int { return v.ParamId }).(pulumi.IntPtrOutput)
}

func (o SamlAppsParameterOutput) ParamKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SamlAppsParameter) string { return v.ParamKeyName }).(pulumi.StringOutput)
}

func (o SamlAppsParameterOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.ProvisionedEntitlements }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) SafeEntitlementsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.SafeEntitlementsEnabled }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.SkipIfBlank }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.UserAttributeMacros }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.UserAttributeMappings }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type SamlAppsParameterArrayOutput struct{ *pulumi.OutputState }

func (SamlAppsParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppsParameter)(nil)).Elem()
}

func (o SamlAppsParameterArrayOutput) ToSamlAppsParameterArrayOutput() SamlAppsParameterArrayOutput {
	return o
}

func (o SamlAppsParameterArrayOutput) ToSamlAppsParameterArrayOutputWithContext(ctx context.Context) SamlAppsParameterArrayOutput {
	return o
}

func (o SamlAppsParameterArrayOutput) Index(i pulumi.IntInput) SamlAppsParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlAppsParameter {
		return vs[0].([]SamlAppsParameter)[vs[1].(int)]
	}).(SamlAppsParameterOutput)
}

type SmartHooksCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// SmartHooksConditionInput is an input type that accepts SmartHooksConditionArgs and SmartHooksConditionOutput values.
// You can construct a concrete instance of `SmartHooksConditionInput` via:
//
//          SmartHooksConditionArgs{...}
type SmartHooksConditionInput interface {
	pulumi.Input

	ToSmartHooksConditionOutput() SmartHooksConditionOutput
	ToSmartHooksConditionOutputWithContext(context.Context) SmartHooksConditionOutput
}

type SmartHooksConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (SmartHooksConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmartHooksCondition)(nil)).Elem()
}

func (i SmartHooksConditionArgs) ToSmartHooksConditionOutput() SmartHooksConditionOutput {
	return i.ToSmartHooksConditionOutputWithContext(context.Background())
}

func (i SmartHooksConditionArgs) ToSmartHooksConditionOutputWithContext(ctx context.Context) SmartHooksConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHooksConditionOutput)
}

// SmartHooksConditionArrayInput is an input type that accepts SmartHooksConditionArray and SmartHooksConditionArrayOutput values.
// You can construct a concrete instance of `SmartHooksConditionArrayInput` via:
//
//          SmartHooksConditionArray{ SmartHooksConditionArgs{...} }
type SmartHooksConditionArrayInput interface {
	pulumi.Input

	ToSmartHooksConditionArrayOutput() SmartHooksConditionArrayOutput
	ToSmartHooksConditionArrayOutputWithContext(context.Context) SmartHooksConditionArrayOutput
}

type SmartHooksConditionArray []SmartHooksConditionInput

func (SmartHooksConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmartHooksCondition)(nil)).Elem()
}

func (i SmartHooksConditionArray) ToSmartHooksConditionArrayOutput() SmartHooksConditionArrayOutput {
	return i.ToSmartHooksConditionArrayOutputWithContext(context.Background())
}

func (i SmartHooksConditionArray) ToSmartHooksConditionArrayOutputWithContext(ctx context.Context) SmartHooksConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHooksConditionArrayOutput)
}

type SmartHooksConditionOutput struct{ *pulumi.OutputState }

func (SmartHooksConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmartHooksCondition)(nil)).Elem()
}

func (o SmartHooksConditionOutput) ToSmartHooksConditionOutput() SmartHooksConditionOutput {
	return o
}

func (o SmartHooksConditionOutput) ToSmartHooksConditionOutputWithContext(ctx context.Context) SmartHooksConditionOutput {
	return o
}

func (o SmartHooksConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SmartHooksCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o SmartHooksConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SmartHooksCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o SmartHooksConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SmartHooksCondition) string { return v.Value }).(pulumi.StringOutput)
}

type SmartHooksConditionArrayOutput struct{ *pulumi.OutputState }

func (SmartHooksConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmartHooksCondition)(nil)).Elem()
}

func (o SmartHooksConditionArrayOutput) ToSmartHooksConditionArrayOutput() SmartHooksConditionArrayOutput {
	return o
}

func (o SmartHooksConditionArrayOutput) ToSmartHooksConditionArrayOutputWithContext(ctx context.Context) SmartHooksConditionArrayOutput {
	return o
}

func (o SmartHooksConditionArrayOutput) Index(i pulumi.IntInput) SmartHooksConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmartHooksCondition {
		return vs[0].([]SmartHooksCondition)[vs[1].(int)]
	}).(SmartHooksConditionOutput)
}

type SmartHooksOptions struct {
	LocationEnabled      *bool `pulumi:"locationEnabled"`
	MfaDeviceInfoEnabled *bool `pulumi:"mfaDeviceInfoEnabled"`
	RiskEnabled          *bool `pulumi:"riskEnabled"`
}

// SmartHooksOptionsInput is an input type that accepts SmartHooksOptionsArgs and SmartHooksOptionsOutput values.
// You can construct a concrete instance of `SmartHooksOptionsInput` via:
//
//          SmartHooksOptionsArgs{...}
type SmartHooksOptionsInput interface {
	pulumi.Input

	ToSmartHooksOptionsOutput() SmartHooksOptionsOutput
	ToSmartHooksOptionsOutputWithContext(context.Context) SmartHooksOptionsOutput
}

type SmartHooksOptionsArgs struct {
	LocationEnabled      pulumi.BoolPtrInput `pulumi:"locationEnabled"`
	MfaDeviceInfoEnabled pulumi.BoolPtrInput `pulumi:"mfaDeviceInfoEnabled"`
	RiskEnabled          pulumi.BoolPtrInput `pulumi:"riskEnabled"`
}

func (SmartHooksOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmartHooksOptions)(nil)).Elem()
}

func (i SmartHooksOptionsArgs) ToSmartHooksOptionsOutput() SmartHooksOptionsOutput {
	return i.ToSmartHooksOptionsOutputWithContext(context.Background())
}

func (i SmartHooksOptionsArgs) ToSmartHooksOptionsOutputWithContext(ctx context.Context) SmartHooksOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHooksOptionsOutput)
}

func (i SmartHooksOptionsArgs) ToSmartHooksOptionsPtrOutput() SmartHooksOptionsPtrOutput {
	return i.ToSmartHooksOptionsPtrOutputWithContext(context.Background())
}

func (i SmartHooksOptionsArgs) ToSmartHooksOptionsPtrOutputWithContext(ctx context.Context) SmartHooksOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHooksOptionsOutput).ToSmartHooksOptionsPtrOutputWithContext(ctx)
}

// SmartHooksOptionsPtrInput is an input type that accepts SmartHooksOptionsArgs, SmartHooksOptionsPtr and SmartHooksOptionsPtrOutput values.
// You can construct a concrete instance of `SmartHooksOptionsPtrInput` via:
//
//          SmartHooksOptionsArgs{...}
//
//  or:
//
//          nil
type SmartHooksOptionsPtrInput interface {
	pulumi.Input

	ToSmartHooksOptionsPtrOutput() SmartHooksOptionsPtrOutput
	ToSmartHooksOptionsPtrOutputWithContext(context.Context) SmartHooksOptionsPtrOutput
}

type smartHooksOptionsPtrType SmartHooksOptionsArgs

func SmartHooksOptionsPtr(v *SmartHooksOptionsArgs) SmartHooksOptionsPtrInput {
	return (*smartHooksOptionsPtrType)(v)
}

func (*smartHooksOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmartHooksOptions)(nil)).Elem()
}

func (i *smartHooksOptionsPtrType) ToSmartHooksOptionsPtrOutput() SmartHooksOptionsPtrOutput {
	return i.ToSmartHooksOptionsPtrOutputWithContext(context.Background())
}

func (i *smartHooksOptionsPtrType) ToSmartHooksOptionsPtrOutputWithContext(ctx context.Context) SmartHooksOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHooksOptionsPtrOutput)
}

type SmartHooksOptionsOutput struct{ *pulumi.OutputState }

func (SmartHooksOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmartHooksOptions)(nil)).Elem()
}

func (o SmartHooksOptionsOutput) ToSmartHooksOptionsOutput() SmartHooksOptionsOutput {
	return o
}

func (o SmartHooksOptionsOutput) ToSmartHooksOptionsOutputWithContext(ctx context.Context) SmartHooksOptionsOutput {
	return o
}

func (o SmartHooksOptionsOutput) ToSmartHooksOptionsPtrOutput() SmartHooksOptionsPtrOutput {
	return o.ToSmartHooksOptionsPtrOutputWithContext(context.Background())
}

func (o SmartHooksOptionsOutput) ToSmartHooksOptionsPtrOutputWithContext(ctx context.Context) SmartHooksOptionsPtrOutput {
	return o.ApplyT(func(v SmartHooksOptions) *SmartHooksOptions {
		return &v
	}).(SmartHooksOptionsPtrOutput)
}
func (o SmartHooksOptionsOutput) LocationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmartHooksOptions) *bool { return v.LocationEnabled }).(pulumi.BoolPtrOutput)
}

func (o SmartHooksOptionsOutput) MfaDeviceInfoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmartHooksOptions) *bool { return v.MfaDeviceInfoEnabled }).(pulumi.BoolPtrOutput)
}

func (o SmartHooksOptionsOutput) RiskEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmartHooksOptions) *bool { return v.RiskEnabled }).(pulumi.BoolPtrOutput)
}

type SmartHooksOptionsPtrOutput struct{ *pulumi.OutputState }

func (SmartHooksOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmartHooksOptions)(nil)).Elem()
}

func (o SmartHooksOptionsPtrOutput) ToSmartHooksOptionsPtrOutput() SmartHooksOptionsPtrOutput {
	return o
}

func (o SmartHooksOptionsPtrOutput) ToSmartHooksOptionsPtrOutputWithContext(ctx context.Context) SmartHooksOptionsPtrOutput {
	return o
}

func (o SmartHooksOptionsPtrOutput) Elem() SmartHooksOptionsOutput {
	return o.ApplyT(func(v *SmartHooksOptions) SmartHooksOptions { return *v }).(SmartHooksOptionsOutput)
}

func (o SmartHooksOptionsPtrOutput) LocationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmartHooksOptions) *bool {
		if v == nil {
			return nil
		}
		return v.LocationEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SmartHooksOptionsPtrOutput) MfaDeviceInfoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmartHooksOptions) *bool {
		if v == nil {
			return nil
		}
		return v.MfaDeviceInfoEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SmartHooksOptionsPtrOutput) RiskEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmartHooksOptions) *bool {
		if v == nil {
			return nil
		}
		return v.RiskEnabled
	}).(pulumi.BoolPtrOutput)
}

type UserMappingsAction struct {
	Action string   `pulumi:"action"`
	Values []string `pulumi:"values"`
}

// UserMappingsActionInput is an input type that accepts UserMappingsActionArgs and UserMappingsActionOutput values.
// You can construct a concrete instance of `UserMappingsActionInput` via:
//
//          UserMappingsActionArgs{...}
type UserMappingsActionInput interface {
	pulumi.Input

	ToUserMappingsActionOutput() UserMappingsActionOutput
	ToUserMappingsActionOutputWithContext(context.Context) UserMappingsActionOutput
}

type UserMappingsActionArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (UserMappingsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsAction)(nil)).Elem()
}

func (i UserMappingsActionArgs) ToUserMappingsActionOutput() UserMappingsActionOutput {
	return i.ToUserMappingsActionOutputWithContext(context.Background())
}

func (i UserMappingsActionArgs) ToUserMappingsActionOutputWithContext(ctx context.Context) UserMappingsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsActionOutput)
}

// UserMappingsActionArrayInput is an input type that accepts UserMappingsActionArray and UserMappingsActionArrayOutput values.
// You can construct a concrete instance of `UserMappingsActionArrayInput` via:
//
//          UserMappingsActionArray{ UserMappingsActionArgs{...} }
type UserMappingsActionArrayInput interface {
	pulumi.Input

	ToUserMappingsActionArrayOutput() UserMappingsActionArrayOutput
	ToUserMappingsActionArrayOutputWithContext(context.Context) UserMappingsActionArrayOutput
}

type UserMappingsActionArray []UserMappingsActionInput

func (UserMappingsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsAction)(nil)).Elem()
}

func (i UserMappingsActionArray) ToUserMappingsActionArrayOutput() UserMappingsActionArrayOutput {
	return i.ToUserMappingsActionArrayOutputWithContext(context.Background())
}

func (i UserMappingsActionArray) ToUserMappingsActionArrayOutputWithContext(ctx context.Context) UserMappingsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsActionArrayOutput)
}

type UserMappingsActionOutput struct{ *pulumi.OutputState }

func (UserMappingsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsAction)(nil)).Elem()
}

func (o UserMappingsActionOutput) ToUserMappingsActionOutput() UserMappingsActionOutput {
	return o
}

func (o UserMappingsActionOutput) ToUserMappingsActionOutputWithContext(ctx context.Context) UserMappingsActionOutput {
	return o
}

func (o UserMappingsActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o UserMappingsActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserMappingsAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type UserMappingsActionArrayOutput struct{ *pulumi.OutputState }

func (UserMappingsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsAction)(nil)).Elem()
}

func (o UserMappingsActionArrayOutput) ToUserMappingsActionArrayOutput() UserMappingsActionArrayOutput {
	return o
}

func (o UserMappingsActionArrayOutput) ToUserMappingsActionArrayOutputWithContext(ctx context.Context) UserMappingsActionArrayOutput {
	return o
}

func (o UserMappingsActionArrayOutput) Index(i pulumi.IntInput) UserMappingsActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserMappingsAction {
		return vs[0].([]UserMappingsAction)[vs[1].(int)]
	}).(UserMappingsActionOutput)
}

type UserMappingsCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// UserMappingsConditionInput is an input type that accepts UserMappingsConditionArgs and UserMappingsConditionOutput values.
// You can construct a concrete instance of `UserMappingsConditionInput` via:
//
//          UserMappingsConditionArgs{...}
type UserMappingsConditionInput interface {
	pulumi.Input

	ToUserMappingsConditionOutput() UserMappingsConditionOutput
	ToUserMappingsConditionOutputWithContext(context.Context) UserMappingsConditionOutput
}

type UserMappingsConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (UserMappingsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsCondition)(nil)).Elem()
}

func (i UserMappingsConditionArgs) ToUserMappingsConditionOutput() UserMappingsConditionOutput {
	return i.ToUserMappingsConditionOutputWithContext(context.Background())
}

func (i UserMappingsConditionArgs) ToUserMappingsConditionOutputWithContext(ctx context.Context) UserMappingsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsConditionOutput)
}

// UserMappingsConditionArrayInput is an input type that accepts UserMappingsConditionArray and UserMappingsConditionArrayOutput values.
// You can construct a concrete instance of `UserMappingsConditionArrayInput` via:
//
//          UserMappingsConditionArray{ UserMappingsConditionArgs{...} }
type UserMappingsConditionArrayInput interface {
	pulumi.Input

	ToUserMappingsConditionArrayOutput() UserMappingsConditionArrayOutput
	ToUserMappingsConditionArrayOutputWithContext(context.Context) UserMappingsConditionArrayOutput
}

type UserMappingsConditionArray []UserMappingsConditionInput

func (UserMappingsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsCondition)(nil)).Elem()
}

func (i UserMappingsConditionArray) ToUserMappingsConditionArrayOutput() UserMappingsConditionArrayOutput {
	return i.ToUserMappingsConditionArrayOutputWithContext(context.Background())
}

func (i UserMappingsConditionArray) ToUserMappingsConditionArrayOutputWithContext(ctx context.Context) UserMappingsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsConditionArrayOutput)
}

type UserMappingsConditionOutput struct{ *pulumi.OutputState }

func (UserMappingsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsCondition)(nil)).Elem()
}

func (o UserMappingsConditionOutput) ToUserMappingsConditionOutput() UserMappingsConditionOutput {
	return o
}

func (o UserMappingsConditionOutput) ToUserMappingsConditionOutputWithContext(ctx context.Context) UserMappingsConditionOutput {
	return o
}

func (o UserMappingsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o UserMappingsConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o UserMappingsConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsCondition) string { return v.Value }).(pulumi.StringOutput)
}

type UserMappingsConditionArrayOutput struct{ *pulumi.OutputState }

func (UserMappingsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsCondition)(nil)).Elem()
}

func (o UserMappingsConditionArrayOutput) ToUserMappingsConditionArrayOutput() UserMappingsConditionArrayOutput {
	return o
}

func (o UserMappingsConditionArrayOutput) ToUserMappingsConditionArrayOutputWithContext(ctx context.Context) UserMappingsConditionArrayOutput {
	return o
}

func (o UserMappingsConditionArrayOutput) Index(i pulumi.IntInput) UserMappingsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserMappingsCondition {
		return vs[0].([]UserMappingsCondition)[vs[1].(int)]
	}).(UserMappingsConditionOutput)
}

func init() {
	pulumi.RegisterOutputType(AppParameterOutput{})
	pulumi.RegisterOutputType(AppParameterArrayOutput{})
	pulumi.RegisterOutputType(AppRulesActionOutput{})
	pulumi.RegisterOutputType(AppRulesActionArrayOutput{})
	pulumi.RegisterOutputType(AppRulesConditionOutput{})
	pulumi.RegisterOutputType(AppRulesConditionArrayOutput{})
	pulumi.RegisterOutputType(OidcAppsParameterOutput{})
	pulumi.RegisterOutputType(OidcAppsParameterArrayOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegeOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegeStatementOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegeStatementArrayOutput{})
	pulumi.RegisterOutputType(SamlAppsParameterOutput{})
	pulumi.RegisterOutputType(SamlAppsParameterArrayOutput{})
	pulumi.RegisterOutputType(SmartHooksConditionOutput{})
	pulumi.RegisterOutputType(SmartHooksConditionArrayOutput{})
	pulumi.RegisterOutputType(SmartHooksOptionsOutput{})
	pulumi.RegisterOutputType(SmartHooksOptionsPtrOutput{})
	pulumi.RegisterOutputType(UserMappingsActionOutput{})
	pulumi.RegisterOutputType(UserMappingsActionArrayOutput{})
	pulumi.RegisterOutputType(UserMappingsConditionOutput{})
	pulumi.RegisterOutputType(UserMappingsConditionArrayOutput{})
}
