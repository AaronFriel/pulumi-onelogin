// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OidcApp struct {
	pulumi.CustomResourceState

	AllowAssumedSignin pulumi.BoolPtrOutput        `pulumi:"allowAssumedSignin"`
	AuthMethod         pulumi.IntOutput            `pulumi:"authMethod"`
	BrandId            pulumi.IntPtrOutput         `pulumi:"brandId"`
	Configuration      pulumi.StringMapOutput      `pulumi:"configuration"`
	ConnectorId        pulumi.IntOutput            `pulumi:"connectorId"`
	CreatedAt          pulumi.StringOutput         `pulumi:"createdAt"`
	Description        pulumi.StringPtrOutput      `pulumi:"description"`
	IconUrl            pulumi.StringOutput         `pulumi:"iconUrl"`
	Name               pulumi.StringOutput         `pulumi:"name"`
	Notes              pulumi.StringPtrOutput      `pulumi:"notes"`
	Parameters         OidcAppParameterArrayOutput `pulumi:"parameters"`
	PolicyId           pulumi.IntOutput            `pulumi:"policyId"`
	Provisioning       pulumi.BoolMapOutput        `pulumi:"provisioning"`
	Sso                pulumi.StringMapOutput      `pulumi:"sso"`
	TabId              pulumi.IntOutput            `pulumi:"tabId"`
	UpdatedAt          pulumi.StringOutput         `pulumi:"updatedAt"`
	Visible            pulumi.BoolPtrOutput        `pulumi:"visible"`
}

// NewOidcApp registers a new resource with the given unique name, arguments, and options.
func NewOidcApp(ctx *pulumi.Context,
	name string, args *OidcAppArgs, opts ...pulumi.ResourceOption) (*OidcApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectorId'")
	}
	var resource OidcApp
	err := ctx.RegisterResource("onelogin:index/oidcApp:OidcApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOidcApp gets an existing OidcApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOidcApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OidcAppState, opts ...pulumi.ResourceOption) (*OidcApp, error) {
	var resource OidcApp
	err := ctx.ReadResource("onelogin:index/oidcApp:OidcApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OidcApp resources.
type oidcAppState struct {
	AllowAssumedSignin *bool              `pulumi:"allowAssumedSignin"`
	AuthMethod         *int               `pulumi:"authMethod"`
	BrandId            *int               `pulumi:"brandId"`
	Configuration      map[string]string  `pulumi:"configuration"`
	ConnectorId        *int               `pulumi:"connectorId"`
	CreatedAt          *string            `pulumi:"createdAt"`
	Description        *string            `pulumi:"description"`
	IconUrl            *string            `pulumi:"iconUrl"`
	Name               *string            `pulumi:"name"`
	Notes              *string            `pulumi:"notes"`
	Parameters         []OidcAppParameter `pulumi:"parameters"`
	PolicyId           *int               `pulumi:"policyId"`
	Provisioning       map[string]bool    `pulumi:"provisioning"`
	Sso                map[string]string  `pulumi:"sso"`
	TabId              *int               `pulumi:"tabId"`
	UpdatedAt          *string            `pulumi:"updatedAt"`
	Visible            *bool              `pulumi:"visible"`
}

type OidcAppState struct {
	AllowAssumedSignin pulumi.BoolPtrInput
	AuthMethod         pulumi.IntPtrInput
	BrandId            pulumi.IntPtrInput
	Configuration      pulumi.StringMapInput
	ConnectorId        pulumi.IntPtrInput
	CreatedAt          pulumi.StringPtrInput
	Description        pulumi.StringPtrInput
	IconUrl            pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	Notes              pulumi.StringPtrInput
	Parameters         OidcAppParameterArrayInput
	PolicyId           pulumi.IntPtrInput
	Provisioning       pulumi.BoolMapInput
	Sso                pulumi.StringMapInput
	TabId              pulumi.IntPtrInput
	UpdatedAt          pulumi.StringPtrInput
	Visible            pulumi.BoolPtrInput
}

func (OidcAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*oidcAppState)(nil)).Elem()
}

type oidcAppArgs struct {
	AllowAssumedSignin *bool              `pulumi:"allowAssumedSignin"`
	BrandId            *int               `pulumi:"brandId"`
	Configuration      map[string]string  `pulumi:"configuration"`
	ConnectorId        int                `pulumi:"connectorId"`
	Description        *string            `pulumi:"description"`
	Name               *string            `pulumi:"name"`
	Notes              *string            `pulumi:"notes"`
	Parameters         []OidcAppParameter `pulumi:"parameters"`
	Provisioning       map[string]bool    `pulumi:"provisioning"`
	Visible            *bool              `pulumi:"visible"`
}

// The set of arguments for constructing a OidcApp resource.
type OidcAppArgs struct {
	AllowAssumedSignin pulumi.BoolPtrInput
	BrandId            pulumi.IntPtrInput
	Configuration      pulumi.StringMapInput
	ConnectorId        pulumi.IntInput
	Description        pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	Notes              pulumi.StringPtrInput
	Parameters         OidcAppParameterArrayInput
	Provisioning       pulumi.BoolMapInput
	Visible            pulumi.BoolPtrInput
}

func (OidcAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oidcAppArgs)(nil)).Elem()
}

type OidcAppInput interface {
	pulumi.Input

	ToOidcAppOutput() OidcAppOutput
	ToOidcAppOutputWithContext(ctx context.Context) OidcAppOutput
}

func (*OidcApp) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcApp)(nil))
}

func (i *OidcApp) ToOidcAppOutput() OidcAppOutput {
	return i.ToOidcAppOutputWithContext(context.Background())
}

func (i *OidcApp) ToOidcAppOutputWithContext(ctx context.Context) OidcAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppOutput)
}

func (i *OidcApp) ToOidcAppPtrOutput() OidcAppPtrOutput {
	return i.ToOidcAppPtrOutputWithContext(context.Background())
}

func (i *OidcApp) ToOidcAppPtrOutputWithContext(ctx context.Context) OidcAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppPtrOutput)
}

type OidcAppPtrInput interface {
	pulumi.Input

	ToOidcAppPtrOutput() OidcAppPtrOutput
	ToOidcAppPtrOutputWithContext(ctx context.Context) OidcAppPtrOutput
}

type oidcAppPtrType OidcAppArgs

func (*oidcAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OidcApp)(nil))
}

func (i *oidcAppPtrType) ToOidcAppPtrOutput() OidcAppPtrOutput {
	return i.ToOidcAppPtrOutputWithContext(context.Background())
}

func (i *oidcAppPtrType) ToOidcAppPtrOutputWithContext(ctx context.Context) OidcAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppPtrOutput)
}

// OidcAppArrayInput is an input type that accepts OidcAppArray and OidcAppArrayOutput values.
// You can construct a concrete instance of `OidcAppArrayInput` via:
//
//          OidcAppArray{ OidcAppArgs{...} }
type OidcAppArrayInput interface {
	pulumi.Input

	ToOidcAppArrayOutput() OidcAppArrayOutput
	ToOidcAppArrayOutputWithContext(context.Context) OidcAppArrayOutput
}

type OidcAppArray []OidcAppInput

func (OidcAppArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*OidcApp)(nil))
}

func (i OidcAppArray) ToOidcAppArrayOutput() OidcAppArrayOutput {
	return i.ToOidcAppArrayOutputWithContext(context.Background())
}

func (i OidcAppArray) ToOidcAppArrayOutputWithContext(ctx context.Context) OidcAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppArrayOutput)
}

// OidcAppMapInput is an input type that accepts OidcAppMap and OidcAppMapOutput values.
// You can construct a concrete instance of `OidcAppMapInput` via:
//
//          OidcAppMap{ "key": OidcAppArgs{...} }
type OidcAppMapInput interface {
	pulumi.Input

	ToOidcAppMapOutput() OidcAppMapOutput
	ToOidcAppMapOutputWithContext(context.Context) OidcAppMapOutput
}

type OidcAppMap map[string]OidcAppInput

func (OidcAppMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*OidcApp)(nil))
}

func (i OidcAppMap) ToOidcAppMapOutput() OidcAppMapOutput {
	return i.ToOidcAppMapOutputWithContext(context.Background())
}

func (i OidcAppMap) ToOidcAppMapOutputWithContext(ctx context.Context) OidcAppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppMapOutput)
}

type OidcAppOutput struct {
	*pulumi.OutputState
}

func (OidcAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcApp)(nil))
}

func (o OidcAppOutput) ToOidcAppOutput() OidcAppOutput {
	return o
}

func (o OidcAppOutput) ToOidcAppOutputWithContext(ctx context.Context) OidcAppOutput {
	return o
}

func (o OidcAppOutput) ToOidcAppPtrOutput() OidcAppPtrOutput {
	return o.ToOidcAppPtrOutputWithContext(context.Background())
}

func (o OidcAppOutput) ToOidcAppPtrOutputWithContext(ctx context.Context) OidcAppPtrOutput {
	return o.ApplyT(func(v OidcApp) *OidcApp {
		return &v
	}).(OidcAppPtrOutput)
}

type OidcAppPtrOutput struct {
	*pulumi.OutputState
}

func (OidcAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OidcApp)(nil))
}

func (o OidcAppPtrOutput) ToOidcAppPtrOutput() OidcAppPtrOutput {
	return o
}

func (o OidcAppPtrOutput) ToOidcAppPtrOutputWithContext(ctx context.Context) OidcAppPtrOutput {
	return o
}

type OidcAppArrayOutput struct{ *pulumi.OutputState }

func (OidcAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OidcApp)(nil))
}

func (o OidcAppArrayOutput) ToOidcAppArrayOutput() OidcAppArrayOutput {
	return o
}

func (o OidcAppArrayOutput) ToOidcAppArrayOutputWithContext(ctx context.Context) OidcAppArrayOutput {
	return o
}

func (o OidcAppArrayOutput) Index(i pulumi.IntInput) OidcAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OidcApp {
		return vs[0].([]OidcApp)[vs[1].(int)]
	}).(OidcAppOutput)
}

type OidcAppMapOutput struct{ *pulumi.OutputState }

func (OidcAppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OidcApp)(nil))
}

func (o OidcAppMapOutput) ToOidcAppMapOutput() OidcAppMapOutput {
	return o
}

func (o OidcAppMapOutput) ToOidcAppMapOutputWithContext(ctx context.Context) OidcAppMapOutput {
	return o
}

func (o OidcAppMapOutput) MapIndex(k pulumi.StringInput) OidcAppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OidcApp {
		return vs[0].(map[string]OidcApp)[vs[1].(string)]
	}).(OidcAppOutput)
}

func init() {
	pulumi.RegisterOutputType(OidcAppOutput{})
	pulumi.RegisterOutputType(OidcAppPtrOutput{})
	pulumi.RegisterOutputType(OidcAppArrayOutput{})
	pulumi.RegisterOutputType(OidcAppMapOutput{})
}
