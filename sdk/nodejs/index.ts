// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./app";
export * from "./appRoleAttachments";
export * from "./appRules";
export * from "./getUser";
export * from "./getUsers";
export * from "./oidcApps";
export * from "./privileges";
export * from "./provider";
export * from "./roles";
export * from "./samlApps";
export * from "./smartHooks";
export * from "./userMappings";
export * from "./users";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { App } from "./app";
import { AppRoleAttachments } from "./appRoleAttachments";
import { AppRules } from "./appRules";
import { OidcApps } from "./oidcApps";
import { Privileges } from "./privileges";
import { Roles } from "./roles";
import { SamlApps } from "./samlApps";
import { SmartHooks } from "./smartHooks";
import { UserMappings } from "./userMappings";
import { Users } from "./users";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "onelogin:index/app:App":
                return new App(name, <any>undefined, { urn })
            case "onelogin:index/appRoleAttachments:AppRoleAttachments":
                return new AppRoleAttachments(name, <any>undefined, { urn })
            case "onelogin:index/appRules:AppRules":
                return new AppRules(name, <any>undefined, { urn })
            case "onelogin:index/oidcApps:OidcApps":
                return new OidcApps(name, <any>undefined, { urn })
            case "onelogin:index/privileges:Privileges":
                return new Privileges(name, <any>undefined, { urn })
            case "onelogin:index/roles:Roles":
                return new Roles(name, <any>undefined, { urn })
            case "onelogin:index/samlApps:SamlApps":
                return new SamlApps(name, <any>undefined, { urn })
            case "onelogin:index/smartHooks:SmartHooks":
                return new SmartHooks(name, <any>undefined, { urn })
            case "onelogin:index/userMappings:UserMappings":
                return new UserMappings(name, <any>undefined, { urn })
            case "onelogin:index/users:Users":
                return new Users(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("onelogin", "index/app", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/appRoleAttachments", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/appRules", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/oidcApps", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/privileges", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/roles", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/samlApps", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/smartHooks", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/userMappings", _module)
pulumi.runtime.registerResourceModule("onelogin", "index/users", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("onelogin", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:onelogin") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
