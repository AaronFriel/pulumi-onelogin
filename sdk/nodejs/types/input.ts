// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface AppParameter {
    attributesTransformations?: pulumi.Input<string>;
    defaultValues?: pulumi.Input<string>;
    includeInSamlAssertion?: pulumi.Input<boolean>;
    label?: pulumi.Input<string>;
    paramId?: pulumi.Input<number>;
    paramKeyName: pulumi.Input<string>;
    provisionedEntitlements?: pulumi.Input<boolean>;
    safeEntitlementsEnabled?: pulumi.Input<boolean>;
    skipIfBlank?: pulumi.Input<boolean>;
    userAttributeMacros?: pulumi.Input<string>;
    userAttributeMappings?: pulumi.Input<string>;
    values?: pulumi.Input<string>;
}

export interface AppRuleAction {
    action: pulumi.Input<string>;
    expression?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppRuleCondition {
    operator: pulumi.Input<string>;
    source: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface OidcAppParameter {
    attributesTransformations?: pulumi.Input<string>;
    defaultValues?: pulumi.Input<string>;
    includeInSamlAssertion?: pulumi.Input<boolean>;
    label?: pulumi.Input<string>;
    paramId?: pulumi.Input<number>;
    paramKeyName: pulumi.Input<string>;
    provisionedEntitlements?: pulumi.Input<boolean>;
    safeEntitlementsEnabled?: pulumi.Input<boolean>;
    skipIfBlank?: pulumi.Input<boolean>;
    userAttributeMacros?: pulumi.Input<string>;
    userAttributeMappings?: pulumi.Input<string>;
    values?: pulumi.Input<string>;
}

export interface PrivilegesPrivilege {
    statements: pulumi.Input<pulumi.Input<inputs.PrivilegesPrivilegeStatement>[]>;
    version?: pulumi.Input<string>;
}

export interface PrivilegesPrivilegeStatement {
    actions: pulumi.Input<pulumi.Input<string>[]>;
    effect: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SamlAppParameter {
    attributesTransformations?: pulumi.Input<string>;
    defaultValues?: pulumi.Input<string>;
    includeInSamlAssertion?: pulumi.Input<boolean>;
    label?: pulumi.Input<string>;
    paramId?: pulumi.Input<number>;
    paramKeyName: pulumi.Input<string>;
    provisionedEntitlements?: pulumi.Input<boolean>;
    safeEntitlementsEnabled?: pulumi.Input<boolean>;
    skipIfBlank?: pulumi.Input<boolean>;
    userAttributeMacros?: pulumi.Input<string>;
    userAttributeMappings?: pulumi.Input<string>;
    values?: pulumi.Input<string>;
}

export interface SmartHookCondition {
    operator: pulumi.Input<string>;
    source: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SmartHookOptions {
    locationEnabled?: pulumi.Input<boolean>;
    mfaDeviceInfoEnabled?: pulumi.Input<boolean>;
    riskEnabled?: pulumi.Input<boolean>;
}

export interface UserMappingAction {
    action: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface UserMappingCondition {
    operator: pulumi.Input<string>;
    source: pulumi.Input<string>;
    value: pulumi.Input<string>;
}
