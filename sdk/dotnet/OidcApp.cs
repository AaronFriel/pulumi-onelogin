// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin
{
    [OneloginResourceType("onelogin:index/oidcApp:OidcApp")]
    public partial class OidcApp : Pulumi.CustomResource
    {
        [Output("allowAssumedSignin")]
        public Output<bool?> AllowAssumedSignin { get; private set; } = null!;

        [Output("authMethod")]
        public Output<int> AuthMethod { get; private set; } = null!;

        [Output("brandId")]
        public Output<int?> BrandId { get; private set; } = null!;

        [Output("configuration")]
        public Output<ImmutableDictionary<string, string>?> Configuration { get; private set; } = null!;

        [Output("connectorId")]
        public Output<int> ConnectorId { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("iconUrl")]
        public Output<string> IconUrl { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notes")]
        public Output<string?> Notes { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableArray<Outputs.OidcAppParameter>> Parameters { get; private set; } = null!;

        [Output("policyId")]
        public Output<int> PolicyId { get; private set; } = null!;

        [Output("provisioning")]
        public Output<ImmutableDictionary<string, bool>> Provisioning { get; private set; } = null!;

        [Output("sso")]
        public Output<ImmutableDictionary<string, string>> Sso { get; private set; } = null!;

        [Output("tabId")]
        public Output<int> TabId { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("visible")]
        public Output<bool?> Visible { get; private set; } = null!;


        /// <summary>
        /// Create a OidcApp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OidcApp(string name, OidcAppArgs args, CustomResourceOptions? options = null)
            : base("onelogin:index/oidcApp:OidcApp", name, args ?? new OidcAppArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OidcApp(string name, Input<string> id, OidcAppState? state = null, CustomResourceOptions? options = null)
            : base("onelogin:index/oidcApp:OidcApp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OidcApp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OidcApp Get(string name, Input<string> id, OidcAppState? state = null, CustomResourceOptions? options = null)
        {
            return new OidcApp(name, id, state, options);
        }
    }

    public sealed class OidcAppArgs : Pulumi.ResourceArgs
    {
        [Input("allowAssumedSignin")]
        public Input<bool>? AllowAssumedSignin { get; set; }

        [Input("brandId")]
        public Input<int>? BrandId { get; set; }

        [Input("configuration")]
        private InputMap<string>? _configuration;
        public InputMap<string> Configuration
        {
            get => _configuration ?? (_configuration = new InputMap<string>());
            set => _configuration = value;
        }

        [Input("connectorId", required: true)]
        public Input<int> ConnectorId { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("parameters")]
        private InputList<Inputs.OidcAppParameterArgs>? _parameters;
        public InputList<Inputs.OidcAppParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.OidcAppParameterArgs>());
            set => _parameters = value;
        }

        [Input("provisioning")]
        private InputMap<bool>? _provisioning;
        public InputMap<bool> Provisioning
        {
            get => _provisioning ?? (_provisioning = new InputMap<bool>());
            set => _provisioning = value;
        }

        [Input("visible")]
        public Input<bool>? Visible { get; set; }

        public OidcAppArgs()
        {
        }
    }

    public sealed class OidcAppState : Pulumi.ResourceArgs
    {
        [Input("allowAssumedSignin")]
        public Input<bool>? AllowAssumedSignin { get; set; }

        [Input("authMethod")]
        public Input<int>? AuthMethod { get; set; }

        [Input("brandId")]
        public Input<int>? BrandId { get; set; }

        [Input("configuration")]
        private InputMap<string>? _configuration;
        public InputMap<string> Configuration
        {
            get => _configuration ?? (_configuration = new InputMap<string>());
            set => _configuration = value;
        }

        [Input("connectorId")]
        public Input<int>? ConnectorId { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("parameters")]
        private InputList<Inputs.OidcAppParameterGetArgs>? _parameters;
        public InputList<Inputs.OidcAppParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.OidcAppParameterGetArgs>());
            set => _parameters = value;
        }

        [Input("policyId")]
        public Input<int>? PolicyId { get; set; }

        [Input("provisioning")]
        private InputMap<bool>? _provisioning;
        public InputMap<bool> Provisioning
        {
            get => _provisioning ?? (_provisioning = new InputMap<bool>());
            set => _provisioning = value;
        }

        [Input("sso")]
        private InputMap<string>? _sso;
        public InputMap<string> Sso
        {
            get => _sso ?? (_sso = new InputMap<string>());
            set => _sso = value;
        }

        [Input("tabId")]
        public Input<int>? TabId { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("visible")]
        public Input<bool>? Visible { get; set; }

        public OidcAppState()
        {
        }
    }
}
